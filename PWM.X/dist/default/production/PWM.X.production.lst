

Microchip Technology PIC LITE Macro Assembler V1.31 build 56723 
                                                                                               Thu Mar 05 08:53:41 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	16F877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     	;# 
    17  0001                     	;# 
    18  0002                     	;# 
    19  0003                     	;# 
    20  0004                     	;# 
    21  0005                     	;# 
    22  0006                     	;# 
    23  0007                     	;# 
    24  0008                     	;# 
    25  0009                     	;# 
    26  000A                     	;# 
    27  000B                     	;# 
    28  000C                     	;# 
    29  000D                     	;# 
    30  000E                     	;# 
    31  000E                     	;# 
    32  000F                     	;# 
    33  0010                     	;# 
    34  0011                     	;# 
    35  0012                     	;# 
    36  0013                     	;# 
    37  0014                     	;# 
    38  0015                     	;# 
    39  0015                     	;# 
    40  0016                     	;# 
    41  0017                     	;# 
    42  0018                     	;# 
    43  0019                     	;# 
    44  001A                     	;# 
    45  001B                     	;# 
    46  001B                     	;# 
    47  001C                     	;# 
    48  001D                     	;# 
    49  001E                     	;# 
    50  001F                     	;# 
    51  0081                     	;# 
    52  0085                     	;# 
    53  0086                     	;# 
    54  0087                     	;# 
    55  0088                     	;# 
    56  0089                     	;# 
    57  008C                     	;# 
    58  008D                     	;# 
    59  008E                     	;# 
    60  0091                     	;# 
    61  0092                     	;# 
    62  0093                     	;# 
    63  0094                     	;# 
    64  0098                     	;# 
    65  0099                     	;# 
    66  009E                     	;# 
    67  009F                     	;# 
    68  010C                     	;# 
    69  010D                     	;# 
    70  010E                     	;# 
    71  010F                     	;# 
    72  018C                     	;# 
    73  018D                     	;# 
    74                           
    75                           	psect	idataCOMMON
    76  00CD                     __pidataCOMMON:	
    77                           
    78                           ;initializer for _ad
    79  00CD  3432               	retlw	50
    80  00CE  3400               	retlw	0
    81                           
    82                           ;initializer for _bs
    83  00CF  3432               	retlw	50
    84  00D0  3400               	retlw	0
    85                           
    86                           	psect	nvBANK0
    87  0027                     __pnvBANK0:	
    88  0027                     _t0val:	
    89  0027                     	ds	2
    90  000E                     _TMR1	set	14
    91  001F                     _ADCON0	set	31
    92  000B                     _INTCON	set	11
    93  000C                     _PIR1	set	12
    94  0005                     _PORTAbits	set	5
    95  0010                     _T1CON	set	16
    96  0060                     _TMR1IF	set	96
    97  009F                     _ADCON1	set	159
    98  008C                     _PIE1	set	140
    99  0085                     _TRISA	set	133
   100                           
   101                           ; #config settings
   102  0000                     
   103                           	psect	cinit
   104  0015                     start_initialization:	
   105  0015                     __initialization:	
   106                           
   107                           ; Clear objects allocated to COMMON
   108  0015  01F8               	clrf	__pbssCOMMON& (0+127)
   109  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   110                           
   111                           ; Clear objects allocated to BANK0
   112  0017  01A0               	clrf	__pbssBANK0& (0+127)
   113  0018  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   114  0019  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   115  001A  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   116                           
   117                           ; Initialize objects allocated to COMMON
   118  001B  120A  118A  20CD   	fcall	__pidataCOMMON	;fetch initializer
      +       120A  118A         
   119  0020  00F0               	movwf	__pdataCOMMON& (0+127)
   120  0021  120A  118A  20CE   	fcall	__pidataCOMMON+1	;fetch initializer
      +       120A  118A         
   121  0026  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   122  0027  120A  118A  20CF   	fcall	__pidataCOMMON+2	;fetch initializer
      +       120A  118A         
   123  002C  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   124  002D  120A  118A  20D0   	fcall	__pidataCOMMON+3	;fetch initializer
   125  0030  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   126  0031                     end_of_initialization:	
   127                           ;End of C runtime variable initialization code
   128                           
   129  0031                     __end_of__initialization:	
   130  0031  0183               	clrf	3
   131  0032  120A  118A  2895   	ljmp	_main	;jump to C main() function
   132                           
   133                           	psect	bssCOMMON
   134  0078                     __pbssCOMMON:	
   135  0078                     _pwmcnt:	
   136  0078                     	ds	2
   137                           
   138                           	psect	dataCOMMON
   139  0070                     __pdataCOMMON:	
   140  0070                     _ad:	
   141  0070                     	ds	2
   142  0072                     _bs:	
   143  0072                     	ds	2
   144                           
   145                           	psect	bssBANK0
   146  0020                     __pbssBANK0:	
   147  0020                     _cnt:	
   148  0020                     	ds	2
   149  0022                     _i:	
   150  0022                     	ds	2
   151                           
   152                           	psect	cstackCOMMON
   153  0074                     __pcstackCOMMON:	
   154  0074                     ?_main:	
   155  0074                     ?_isr:	
   156                           ; 0 bytes @ 0x0
   157                           
   158  0074                     ??_isr:	
   159                           ; 0 bytes @ 0x0
   160                           
   161                           
   162                           ; 0 bytes @ 0x0
   163  0074                     	ds	4
   164                           
   165                           	psect	cstackBANK0
   166  0024                     __pcstackBANK0:	
   167  0024                     ??_main:	
   168                           
   169                           ; 0 bytes @ 0x0
   170  0024                     	ds	3
   171                           
   172                           	psect	maintext
   173  0095                     __pmaintext:	
   174 ;;
   175 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   176 ;;
   177 ;; *************** function _main *****************
   178 ;; Defined at:
   179 ;;		line 26 in file "main_pwm.c"
   180 ;; Parameters:    Size  Location     Type
   181 ;;		None
   182 ;; Auto vars:     Size  Location     Type
   183 ;;		None
   184 ;; Return value:  Size  Location     Type
   185 ;;		None               void
   186 ;; Registers used:
   187 ;;		wreg, status,2, status,0
   188 ;; Tracked objects:
   189 ;;		On entry : 17F/0
   190 ;;		On exit  : 0/0
   191 ;;		Unchanged: 0/0
   192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   193 ;;      Params:         0       0       0       0       0
   194 ;;      Locals:         0       0       0       0       0
   195 ;;      Temps:          0       3       0       0       0
   196 ;;      Totals:         0       3       0       0       0
   197 ;;Total ram usage:        3 bytes
   198 ;; Hardware stack levels required when called:    1
   199 ;; This function calls:
   200 ;;		Nothing
   201 ;; This function is called by:
   202 ;;		Startup code after reset
   203 ;; This function uses a non-reentrant model
   204 ;;
   205                           
   206                           
   207                           ;psect for function _main
   208  0095                     _main:	
   209                           
   210                           ;main_pwm.c: 28: ADCON0 = 0b00000000;
   211                           
   212                           ;incstack = 0
   213                           ; Regs used in _main: [wreg+status,2+status,0]
   214  0095  1283               	bcf	3,5	;RP0=0, select bank0
   215  0096  1303               	bcf	3,6	;RP1=0, select bank0
   216  0097  019F               	clrf	31	;volatile
   217                           
   218                           ;main_pwm.c: 29: ADCON1 = 0b00010110;
   219  0098  3016               	movlw	22
   220  0099  1683               	bsf	3,5	;RP0=1, select bank1
   221  009A  1303               	bcf	3,6	;RP1=0, select bank1
   222  009B  009F               	movwf	31	;volatile
   223                           
   224                           ;main_pwm.c: 30: TRISA = 0x00;
   225  009C  0185               	clrf	5	;volatile
   226                           
   227                           ;main_pwm.c: 32: T1CON = 0b00000111;
   228  009D  3007               	movlw	7
   229  009E  1283               	bcf	3,5	;RP0=0, select bank0
   230  009F  1303               	bcf	3,6	;RP1=0, select bank0
   231  00A0  0090               	movwf	16	;volatile
   232                           
   233                           ;main_pwm.c: 33: PIR1 = 0b00000001;
   234  00A1  3001               	movlw	1
   235  00A2  008C               	movwf	12	;volatile
   236                           
   237                           ;main_pwm.c: 34: PIE1 = 0b00000001;
   238  00A3  3001               	movlw	1
   239  00A4  1683               	bsf	3,5	;RP0=1, select bank1
   240  00A5  1303               	bcf	3,6	;RP1=0, select bank1
   241  00A6  008C               	movwf	12	;volatile
   242                           
   243                           ;main_pwm.c: 35: INTCON = 0b11000000;
   244  00A7  30C0               	movlw	192
   245  00A8  008B               	movwf	11	;volatile
   246                           
   247                           ;main_pwm.c: 39: t0val = 65411;
   248  00A9  3083               	movlw	131
   249  00AA  1283               	bcf	3,5	;RP0=0, select bank0
   250  00AB  1303               	bcf	3,6	;RP1=0, select bank0
   251  00AC  00A7               	movwf	_t0val
   252  00AD  30FF               	movlw	255
   253  00AE  00A8               	movwf	_t0val+1
   254                           
   255                           ;main_pwm.c: 40: TMR1 = t0val;
   256  00AF  0828               	movf	_t0val+1,w
   257  00B0  018F               	clrf	15	;volatile
   258  00B1  078F               	addwf	15,f	;volatile
   259  00B2  0827               	movf	_t0val,w
   260  00B3  018E               	clrf	14	;volatile
   261  00B4  078E               	addwf	14,f	;volatile
   262  00B5                     l619:	
   263                           ;main_pwm.c: 41: while(1)
   264                           
   265                           
   266                           ;main_pwm.c: 42: {
   267                           ;main_pwm.c: 43: bs = 100;
   268  00B5  3064               	movlw	100
   269  00B6  00F2               	movwf	_bs
   270  00B7  3000               	movlw	0
   271  00B8  00F3               	movwf	_bs+1
   272                           
   273                           ;main_pwm.c: 44: ad = 100;
   274  00B9  3064               	movlw	100
   275  00BA  00F0               	movwf	_ad
   276  00BB  3000               	movlw	0
   277  00BC  00F1               	movwf	_ad+1
   278                           
   279                           ;main_pwm.c: 45: _delay((unsigned long)((1000)*(20000000/4000.0)));
   280  00BD  301A               	movlw	26
   281  00BE  1283               	bcf	3,5	;RP0=0, select bank0
   282  00BF  1303               	bcf	3,6	;RP1=0, select bank0
   283  00C0  00A6               	movwf	??_main+2
   284  00C1  305E               	movlw	94
   285  00C2  00A5               	movwf	??_main+1
   286  00C3  3086               	movlw	134
   287  00C4  00A4               	movwf	??_main
   288  00C5                     u157:	
   289  00C5  0BA4               	decfsz	??_main,f
   290  00C6  28C5               	goto	u157
   291  00C7  0BA5               	decfsz	??_main+1,f
   292  00C8  28C5               	goto	u157
   293  00C9  0BA6               	decfsz	??_main+2,f
   294  00CA  28C5               	goto	u157
   295  00CB  0000               	nop
   296  00CC  28B5               	goto	l619
   297  00CD                     __end_of_main:	
   298                           
   299                           	psect	text1
   300  0035                     __ptext1:	
   301 ;; *************** function _isr *****************
   302 ;; Defined at:
   303 ;;		line 49 in file "main_pwm.c"
   304 ;; Parameters:    Size  Location     Type
   305 ;;		None
   306 ;; Auto vars:     Size  Location     Type
   307 ;;		None
   308 ;; Return value:  Size  Location     Type
   309 ;;		None               void
   310 ;; Registers used:
   311 ;;		wreg, status,2, status,0
   312 ;; Tracked objects:
   313 ;;		On entry : 0/0
   314 ;;		On exit  : 0/0
   315 ;;		Unchanged: 0/0
   316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   317 ;;      Params:         0       0       0       0       0
   318 ;;      Locals:         0       0       0       0       0
   319 ;;      Temps:          4       0       0       0       0
   320 ;;      Totals:         4       0       0       0       0
   321 ;;Total ram usage:        4 bytes
   322 ;; Hardware stack levels used:    1
   323 ;; This function calls:
   324 ;;		Nothing
   325 ;; This function is called by:
   326 ;;		Interrupt level 1
   327 ;; This function uses a non-reentrant model
   328 ;;
   329                           
   330                           
   331                           ;psect for function _isr
   332  0035                     _isr:	
   333                           
   334                           ;main_pwm.c: 52: if(TMR1IF == 1)
   335  0035  1C0C               	btfss	12,0	;volatile
   336  0036  288A               	goto	i1l54
   337                           
   338                           ;main_pwm.c: 53: {
   339                           ;main_pwm.c: 54: TMR1IF = 0;
   340  0037  100C               	bcf	12,0	;volatile
   341                           
   342                           ;main_pwm.c: 55: TMR1 = t0val;
   343  0038  0828               	movf	_t0val+1,w
   344  0039  018F               	clrf	15	;volatile
   345  003A  078F               	addwf	15,f	;volatile
   346  003B  0827               	movf	_t0val,w
   347  003C  018E               	clrf	14	;volatile
   348  003D  078E               	addwf	14,f	;volatile
   349                           
   350                           ;main_pwm.c: 56: PIR1 = 0b00000001;
   351  003E  3001               	movlw	1
   352  003F  008C               	movwf	12	;volatile
   353                           
   354                           ;main_pwm.c: 57: if(pwmcnt<bs){
   355  0040  0873               	movf	_bs+1,w
   356  0041  0279               	subwf	_pwmcnt+1,w
   357  0042  1D03               	skipz
   358  0043  2846               	goto	u9_25
   359  0044  0872               	movf	_bs,w
   360  0045  0278               	subwf	_pwmcnt,w
   361  0046                     u9_25:	
   362  0046  1803               	skipnc
   363  0047  284A               	goto	i1l44
   364                           
   365                           ;main_pwm.c: 58: PORTAbits.RA0 = 1;
   366  0048  1405               	bsf	5,0	;volatile
   367                           
   368                           ;main_pwm.c: 59: }
   369  0049  284B               	goto	i1l587
   370  004A                     i1l44:	
   371                           
   372                           ;main_pwm.c: 60: else{
   373                           ;main_pwm.c: 61: PORTAbits.RA0 = 0;
   374  004A  1005               	bcf	5,0	;volatile
   375  004B                     i1l587:	
   376                           
   377                           ;main_pwm.c: 62: }
   378                           ;main_pwm.c: 63: if(pwmcnt<ad){
   379  004B  0871               	movf	_ad+1,w
   380  004C  0279               	subwf	_pwmcnt+1,w
   381  004D  1D03               	skipz
   382  004E  2851               	goto	u10_25
   383  004F  0870               	movf	_ad,w
   384  0050  0278               	subwf	_pwmcnt,w
   385  0051                     u10_25:	
   386  0051  1803               	skipnc
   387  0052  2855               	goto	i1l46
   388                           
   389                           ;main_pwm.c: 64: PORTAbits.RA1 = 1;
   390  0053  1485               	bsf	5,1	;volatile
   391                           
   392                           ;main_pwm.c: 65: }
   393  0054  2856               	goto	i1l591
   394  0055                     i1l46:	
   395                           
   396                           ;main_pwm.c: 66: else{
   397                           ;main_pwm.c: 67: PORTAbits.RA1 = 0;
   398  0055  1085               	bcf	5,1	;volatile
   399  0056                     i1l591:	
   400                           
   401                           ;main_pwm.c: 68: }
   402                           ;main_pwm.c: 69: pwmcnt++;
   403  0056  3001               	movlw	1
   404  0057  07F8               	addwf	_pwmcnt,f
   405  0058  1803               	skipnc
   406  0059  0AF9               	incf	_pwmcnt+1,f
   407  005A  3000               	movlw	0
   408  005B  07F9               	addwf	_pwmcnt+1,f
   409                           
   410                           ;main_pwm.c: 70: if(pwmcnt > 1500){
   411  005C  3005               	movlw	5
   412  005D  0279               	subwf	_pwmcnt+1,w
   413  005E  30DD               	movlw	221
   414  005F  1903               	skipnz
   415  0060  0278               	subwf	_pwmcnt,w
   416  0061  1C03               	skipc
   417  0062  286B               	goto	i1l597
   418                           
   419                           ;main_pwm.c: 71: pwmcnt = 0;
   420  0063  01F8               	clrf	_pwmcnt
   421  0064  01F9               	clrf	_pwmcnt+1
   422                           
   423                           ;main_pwm.c: 72: cnt++;
   424  0065  3001               	movlw	1
   425  0066  07A0               	addwf	_cnt,f
   426  0067  1803               	skipnc
   427  0068  0AA1               	incf	_cnt+1,f
   428  0069  3000               	movlw	0
   429  006A  07A1               	addwf	_cnt+1,f
   430  006B                     i1l597:	
   431                           
   432                           ;main_pwm.c: 73: }
   433                           ;main_pwm.c: 74: if(cnt>=100)
   434  006B  3000               	movlw	0
   435  006C  0221               	subwf	_cnt+1,w
   436  006D  3064               	movlw	100
   437  006E  1903               	skipnz
   438  006F  0220               	subwf	_cnt,w
   439  0070  1C03               	skipc
   440  0071  288A               	goto	i1l54
   441                           
   442                           ;main_pwm.c: 75: {
   443                           ;main_pwm.c: 76: if(bs == 50) bs = 170;
   444  0072  3032               	movlw	50
   445  0073  0672               	xorwf	_bs,w
   446  0074  0473               	iorwf	_bs+1,w
   447  0075  1D03               	skipz
   448  0076  2879               	goto	i1l603
   449  0077  30AA               	movlw	170
   450  0078  287A               	goto	L1
   451  0079                     i1l603:	
   452                           
   453                           ;main_pwm.c: 77: else bs = 50;
   454  0079  3032               	movlw	50
   455  007A                     L1:	
   456  007A  00F2               	movwf	_bs
   457  007B  3000               	movlw	0
   458  007C  00F3               	movwf	_bs+1
   459                           
   460                           ;main_pwm.c: 78: if(ad == 50) ad = 170;
   461  007D  3032               	movlw	50
   462  007E  0670               	xorwf	_ad,w
   463  007F  0471               	iorwf	_ad+1,w
   464  0080  1D03               	skipz
   465  0081  2884               	goto	i1l607
   466  0082  30AA               	movlw	170
   467  0083  2885               	goto	L2
   468  0084                     i1l607:	
   469                           
   470                           ;main_pwm.c: 79: else ad = 50;
   471  0084  3032               	movlw	50
   472  0085                     L2:	
   473  0085  00F0               	movwf	_ad
   474  0086  3000               	movlw	0
   475  0087  00F1               	movwf	_ad+1
   476                           
   477                           ;main_pwm.c: 80: cnt = 0;
   478  0088  01A0               	clrf	_cnt
   479  0089  01A1               	clrf	_cnt+1
   480  008A                     i1l54:	
   481  008A  0877               	movf	??_isr+3,w
   482  008B  00FF               	movwf	127
   483  008C  0876               	movf	??_isr+2,w
   484  008D  008A               	movwf	10
   485  008E  0875               	movf	??_isr+1,w
   486  008F  0084               	movwf	4
   487  0090  0E74               	swapf	??_isr^(0+-128),w
   488  0091  0083               	movwf	3
   489  0092  0EFE               	swapf	126,f
   490  0093  0E7E               	swapf	126,w
   491  0094  0009               	retfie
   492  0095                     __end_of_isr:	
   493  007E                     btemp	set	126	;btemp
   494  007E                     wtemp	set	126
   495  007E                     wtemp0	set	126
   496  0080                     wtemp1	set	128
   497  0082                     wtemp2	set	130
   498  0084                     wtemp3	set	132
   499  0086                     wtemp4	set	134
   500  0088                     wtemp5	set	136
   501  007F                     wtemp6	set	127
   502  007E                     ttemp	set	126
   503  007E                     ttemp0	set	126
   504  0081                     ttemp1	set	129
   505  0084                     ttemp2	set	132
   506  0087                     ttemp3	set	135
   507  007F                     ttemp4	set	127
   508  007E                     ltemp	set	126
   509  007E                     ltemp0	set	126
   510  0082                     ltemp1	set	130
   511  0086                     ltemp2	set	134
   512  0080                     ltemp3	set	128
   513                           
   514                           	psect	intentry
   515  0004                     __pintentry:	
   516                           ;incstack = 0
   517                           ; Regs used in _isr: [wreg+status,2+status,0]
   518                           
   519  0004                     interrupt_function:	
   520  007E                     saved_w	set	btemp
   521  0004  00FE               	movwf	btemp
   522  0005  0E03               	swapf	3,w
   523  0006  00F4               	movwf	??_isr
   524  0007  0804               	movf	4,w
   525  0008  00F5               	movwf	??_isr+1
   526  0009  080A               	movf	10,w
   527  000A  00F6               	movwf	??_isr+2
   528  000B  1283               	bcf	3,5	;RP0=0, select bank0
   529  000C  1303               	bcf	3,6	;RP1=0, select bank0
   530  000D  087F               	movf	btemp+1,w
   531  000E  00F7               	movwf	??_isr+3
   532  000F  120A  118A  2835   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         6
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      10
    BANK0            80      3       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3       9       5       11.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      13      12        0.0%
ABS                  0      0      13       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Thu Mar 05 08:53:41 2015

                      _i 0022              __CFG_CP$OFF 0000                       _ad 0070  
                     _bs 0072                      l619 00B5                      u157 00C5  
           __CFG_CPD$OFF 0000                      _cnt 0020                      _isr 0035  
                    fsr0 0004             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
                   ?_isr 0074                     _PIE1 008C                     i1l44 004A  
                   i1l46 0055                     i1l54 008A                     _PIR1 000C  
                   _TMR1 000E                     u9_25 0046             __CFG_WRT$OFF 0000  
                   _main 0095                     btemp 007E                     ltemp 007E  
                   start 0012                     ttemp 007E                     wtemp 007E  
                  ??_isr 0074                    ?_main 0074            __CFG_WDTE$OFF 0000  
                  _T1CON 0010                    i1l603 0079                    i1l607 0084  
                  i1l591 0056                    i1l587 004B                    i1l597 006B  
                  u10_25 0051                    _TRISA 0085                    _t0val 0027  
         __CFG_BOREN$OFF 0000                    pclath 000A                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 0015             __end_of_main 00CD  
                 ??_main 0024                   _ADCON0 001F                   _ADCON1 009F  
                 _INTCON 000B                   _TMR1IF 0060           __CFG_PWRTE$OFF 0000  
                 _pwmcnt 0078             __pdataCOMMON 0070                   saved_w 007E  
__end_of__initialization 0031           __pcstackCOMMON 0074               __pbssBANK0 0020  
             __pmaintext 0095               __pintentry 0004                  __ptext1 0035  
           __size_of_isr 0060     end_of_initialization 0031                _PORTAbits 0005  
          __pidataCOMMON 00CD      start_initialization 0015              __end_of_isr 0095  
            __pbssCOMMON 0078                ___latbits 0002            __pcstackBANK0 0024  
              __pnvBANK0 0027        interrupt_function 0004            __size_of_main 0038  
               intlevel1 0000  
